package golang

/**
问题一：想一想虚拟地址空间的由来，早期物理内存为啥不能够满足现状，导致虚拟内存的诞生。
1.进程地址空间不隔离：由于程序直接修改内存地址，而指针是非常强大的，可能存在恶意程序随意修改其他进程内的数据
2.内存使用效率低下：在早期物理内存不够的情况下，会对程序代码段在磁盘和内存之间来回切换和拷贝，导致效率低下。
3.程序运行地址不确定：当内存不够分配连续内存空间时，会进行随机分配，导致内存分配不连续

问题二：虚拟地址带来的作用（虚拟地址空间是在程序和内存之间加了一层，没有什么是加一层解决不了的）
1. 进程空间的隔离：程序不直接访问内存，而是先访问虚拟内存空间，MMU内存管理单元，会映射虚拟地址空间到物理内存

内核空间
内存

用户空间{
5.stack段 局部变量
4.heap段 new alloc				------------>MMU内存管理单元------------>真实物理内存
3.bss段  未初始化的变量、全局变量
2.data段 初始化的变量、全局变量、静态变量
1.text代码段
}

总结起来，虚拟内存的实现涉及硬件层面的内存管理单元（MMU）和软件层面的操作系统支持。通过页表映射虚拟地址到物理地址，并配合页面置换算法，
虚拟内存实现了进程间独立的地址空间、更大的地址空间和内存保护等功能。
*/
