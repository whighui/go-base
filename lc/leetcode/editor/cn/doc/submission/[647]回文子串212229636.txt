class Solution {

    int num = 0;
    public int countSubstrings(String s) {
        for (int i=0; i < s.length(); i++){
            count(s, i, i);//回文串长度为奇数
            count(s, i, i+1);//回文串长度为偶数
        }
        return num;
    }
    
    public void count(String s, int start, int end){
        while(start >= 0 && end < s.length() && s.charAt(start) == s.charAt(end)){
            num++;
            start--;
            end++;
        }
    }

    // public int countSubstrings(String s) {

    //     //dp[i][j]就是表示是否是回文子串被  需要知道dp[i+1][j-1]是否是回文串被 判断就是是否是回文

    //     int len=s.length();
    //     int res=0;
    //     if(len==0|| len==1) return len;

    //     boolean[][] dp=new boolean[len][len];

    //     //dp[i][j] 需要这里就是 dp[i+1][j-1]   j-i<=2 直接就是返回true被 在这里哈呢

    //     for(int i=0; i<len; i++){
    //         dp[i][i]=true;
    //         res++;
    //     }
    //      for (int j = 1; j < len; j++) {
    //         for (int i = 0; i < j; i++) {
    //             if (s.charAt(i) != s.charAt(j)) {
    //                 dp[i][j] = false;
    //             } else {
    //                 if ( j-i <= 2) {  //aba aa j-i<=2
    //                     dp[i][j] = true;
    //                 } else {
    //                     dp[i][j] = dp[i + 1][j - 1];
    //                 }
    //             }
    //             if (dp[i][j] ) {
    //                 res++;
    //             }
    //         }
    //     }

    //     return res;
    // }
}
//runtime:3 ms
//memory:36.6 MB
